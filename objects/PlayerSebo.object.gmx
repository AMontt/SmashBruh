<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>StandGif</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>sprite4</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gravity = 0.98
ch_spr = 0;
atk = 0;
image_speed=1/5;
jumps = 0;
jumpsmax = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>atk = 0
hspeed = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//-------------set variables---------
kp_attack_A = keyboard_check_pressed(ord('J'))
kp_attack_B = keyboard_check_released(ord('K'))

kd_left = keyboard_check_direct(ord('A'))
kd_nleft = keyboard_check_released(ord('A'))

kd_right = keyboard_check_direct(ord('D'))
kd_nright = keyboard_check_released(ord('D'))

kp_up = keyboard_check_pressed(ord('W'))
kp_nup = keyboard_check_released(ord('W'))

kd_down = keyboard_check_direct(ord('S'))
kd_ndown = keyboard_check_direct(ord('S'))
//--------------------------------------------

//----------------Movements----------------
if kd_left {
    hspeed = -10;
    ch_spr = 1;

}
else if kd_right {
    hspeed = 10;
    ch_spr = 1;
    
}

if kd_nleft or kd_nright{ 
    hspeed = 0;
    ch_spr = 0;
}
//----------Jump-------------------------
if kp_up &amp;&amp; (jumps&gt;1){
    jumps -=1;
    vspeed = -14;
}

if(!place_meeting(x,y+1,BlockGrass)){
if (vspeed&gt;0) &amp;&amp; atk == 0{
    sprite_index = Jump;
    if (hspeed&gt;0){
        image_xscale = 1;
    }
     if (hspeed&lt;0){
        image_xscale = -1;
    }
}   
if (vspeed&lt;0) &amp;&amp; atk == 0{
    sprite_index = Jump;
    if (hspeed&lt;0){
        image_xscale = -1;
    }
    if (hspeed&gt;0){
        image_xscale = 1;
    }
}   
}
//--------------------End_Jump--------------------

//-------------------End_Movements----------------

//-----------------Basic attack------------------------
if kp_attack_A &amp;&amp; hspeed = 0 &amp;&amp; vspeed = 0 &amp;&amp; atk = 0{
    atk = 1;
    alarm[0] = 15;
    image_speed=1/3;   
}

//----------------End_Basic attack---------------------

//------------------------Attack+speed ---------------------
if kp_attack_A &amp;&amp; hspeed!=0 &amp;&amp; vspeed == 0 &amp;&amp; atk != 2{
    atk = 2;
    vspeed = -7;
    hspeed = image_xscale*17;
    alarm[0] = 15;
    image_speed = 1/3;
}
//----------------------End_Attack+speed----------------

//------------Change of sprites ----------------------------

//---And reset of Atk according to collision with block-----


//---------------Sprites for Non-Attack---------------------

if (place_meeting(x,y+1,BlockGrass)){
    jumps = jumpsmax;
    if (hspeed == 0 &amp;&amp; jumpsmax == 2 &amp;&amp; atk == 0) {
     sprite_index = StandGif;
    }

    if (hspeed&lt;0 &amp;&amp; ch_spr = 1 &amp;&amp; vspeed ==0) {
      sprite_index = Run;
       image_xscale = -1;
    }
    if (hspeed&gt;0 &amp;&amp; ch_spr = 1 &amp;&amp; vspeed == 0) {
     sprite_index = Run;
      image_xscale = 1;
    }
}

//------------End_Sprites for Non-Attack---------------- 

//-------------Sprites for Attack------------------------
if (place_meeting(x,y+1,BlockGrass)){
    jumps = jumpsmax;
    if (hspeed == 0 &amp;&amp; jumpsmax == 2 &amp;&amp; atk == 1) {
     sprite_index = Attack;
    }

    if (hspeed&lt;0 &amp;&amp; ch_spr = 1 &amp;&amp; atk == 2) {
      sprite_index = Attack_Side;
       image_xscale = -1;
    }
    if (hspeed&gt;0 &amp;&amp; ch_spr = 1  &amp;&amp; atk == 2) {
     sprite_index = Attack_Side;
      image_xscale = 1;
    }
}
//----------End_Sprites for Attack---------------------

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="BlockGrass">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!place_free(x+hspeed,y)){
    if(hspeed&lt;=0){move_contact_solid(180,abs(hspeed));}
    if(hspeed&gt;0){move_contact_solid(0,abs(hspeed));}
    hspeed = 0;
}

if (!place_free(x,y+vspeed)){
    if(vspeed&lt;=0){move_contact_solid(90,abs(vspeed));}
    if(vspeed&gt;0){move_contact_solid(270,abs(vspeed)); jumpsmax = 2;}
    vspeed = 0;
}
if (!place_free(x+hspeed,y+vspeed)){
    hspeed=0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
